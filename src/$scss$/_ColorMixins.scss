
//
@use "ColorUtils" as cu;

//
@mixin highlight-color {
    & {
        @include cu.contrast-inverse("--theme-highlight-color", "var(--theme-surface-color, currentColor)", 1);
    }
}

//
@mixin bg-dep {
    & {
        @include cu.contrast-inverse("--accent-glyph-color", cu.$baseColor);
        @include cu.contrast-inverse("--contrast-glyph-color", "var(--theme-surface-color, var(--current-surface-color, currentColor))");
        & { --theme-glyph-color: var(--contrast-glyph-color); }
    }
}


//
@mixin solid {
    @include cu.theme-dependent("--theme-accent-base-color", "var(--theme-accent-light)", "var(--theme-accent-dark)");
    & { --theme-solid-color: #{cu.theme-mod-up(cu.$baseColor, 96%)}; }
}

//
@mixin inverse {
    @include cu.theme-dependent("--theme-accent-base-color", "var(--theme-accent-dark)", "var(--theme-accent-light)");
    & { --theme-solid-color: #{cu.theme-mod-down(cu.$baseColor, 80%)}; }
}


//
@mixin accent {
    & { --theme-accent-base-color: var(--theme-base-color); };
    & { --theme-solid-color: #{cu.$baseColor}; }
}

//
@mixin accent-inverse {
    @include accent;
    @include cu.contrast-inverse("--theme-chroma-mixed", cu.$baseColor, "var(--theme-surface-alpha, 0)");
}


//
@mixin dynamic {
    & { --theme-dynamic-color: #{cu.$baseColor}; };
    &, &::before, &::after, &::selection, & :where(*), &::slotted(*) {
        --theme-chroma-mixed: var(--theme-dynamic-color, color-mix(in oklch, #{cu.$baseColor} calc(100% * var(--theme-accent-chroma)), var(--theme-solid-color)));
    }
}

//
@mixin transparent-mode {
    //$color: "oklch(from var(--theme-surface-color) l c h / var(--theme-surface-alpha))";
    & { --theme-surface-alpha  : 0; };
    //& { --current-surface-color: color-mix(in oklch, var(--theme-highlight-color) calc(var(--highlight-coefficient) * 1%), #{$color}); }
}
